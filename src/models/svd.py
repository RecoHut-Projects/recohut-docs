# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/models/models.svd.ipynb (unless otherwise specified).

__all__ = ['SVDSimilarity']

# Cell
import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from scipy.sparse.linalg import svds

# Cell
class SVDSimilarity:
    def fit(self, df, user_col='user_id', item_col='item_id', rating_col='rating', n_factors=50):
        ratings_mat = np.ndarray(
            shape=(np.max(df[item_col].values), np.max(df[user_col].values)),
            dtype=np.uint8)
        ratings_mat[df[item_col].values-1, df[user_col].values-1] = df[rating_col].values
        # normalize the rating matrix
        normalised_mat = ratings_mat - np.asarray([(np.mean(ratings_mat, 1))]).T
        A = normalised_mat.T / np.sqrt(ratings_mat.shape[0] - 1)
        _, _, V = svds(A, n_factors)
        self.item_factors = V.T

    def recommend(self, itemid, top_k=5):
        item_row = self.item_factors[itemid].reshape(1,-1)
        similarity = cosine_similarity(item_row, self.item_factors)
        sort_indexes = list(np.argsort(-similarity)[0][1:top_k+1])
        return sort_indexes