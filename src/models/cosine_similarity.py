# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/models/models.cosine_similarity.ipynb (unless otherwise specified).

__all__ = ['CosineSimilarity']

# Cell
import operator
import numpy as np
import pandas as pd
from scipy.spatial.distance import cosine
from sklearn.metrics.pairwise import cosine_similarity

# Cell
class CosineSimilarity:
    def fit(self, df, user_col='user_id', item_col='item_id', rating_col='rating'):
        item_sparse_vecs = []
        items = []
        for item, group in df.groupby(item_col):
            vec = [0] * df[user_col].nunique()
            for x in group[[user_col, rating_col]].values:
                vec[int(x[0]) - 1] = x[1]
            item_sparse_vecs.append(vec)
            items.append(item)
        self.item_vecs = np.array(item_sparse_vecs)
        self.item2id = {x:i for i,x in enumerate(items)}

    def recommend(self, itemid, top_k=5):
        item_idx = self.item2id[itemid]
        query = self.item_vecs[item_idx].reshape(1,-1)
        ranking = cosine_similarity(self.item_vecs, query)
        top_ids = np.argsort(ranking, axis=0)
        top_ids = [x[0] for x in top_ids[::-1][:top_k]]
        return top_ids