# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/transforms/transforms.matrix.ipynb (unless otherwise specified).

__all__ = ['generate_rating_matrix']

# Cell
import numpy as np
from scipy.sparse import csr_matrix

# Cell
def generate_rating_matrix(user_seq, num_users, num_items, n):
    """
    Converts user-items sequences into a sparse rating matrix

    Args:
        user_seq (list): a list of list where each inner list is a sequence of items for a user
        num_users (int): number of users
        num_items (int): number of items
        n (int): number of items to ignore from the last for each inner list, for valid/test samples
    Returns:
        csr_matrix: user item rating matrix
    """
    row = []
    col = []
    data = []
    for user_id, item_list in enumerate(user_seq):
        for item in item_list[:-n]: #
            row.append(user_id)
            col.append(item)
            data.append(1)

    row = np.array(row)
    col = np.array(col)
    data = np.array(data)
    return csr_matrix((data, (row, col)), shape=(num_users, num_items))