# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/datasets/datasets.avazu.ipynb (unless otherwise specified).

__all__ = ['AvazuDataset', 'AvazuDataModule']

# Cell
from .bases.ctr import *
from ..utils.common_utils import download_url

from datetime import date

# Cell
class AvazuDataset(CTRDataset):

    feature_cols = [{'name': 'id', 'active': False, 'dtype': 'str', 'type': 'categorical'},
         {'name': 'hour', 'active': True, 'dtype': 'str', 'type': 'categorical', 'preprocess': 'convert_hour'},
         {'name': ['C1','banner_pos','site_id','site_domain','site_category','app_id','app_domain','app_category','device_id',
                   'device_ip','device_model','device_type','device_conn_type','C14','C15','C16','C17','C18','C19','C20','C21'],
           'active': True, 'dtype': 'str', 'type': 'categorical'},
         {'name': 'weekday', 'active': True, 'dtype': 'str', 'type': 'categorical', 'preprocess': 'convert_weekday'},
         {'name': 'weekend', 'active': True, 'dtype': 'str', 'type': 'categorical', 'preprocess': 'convert_weekend'}]

    label_col = {'name': 'click', 'dtype': float}

    train_url = "https://github.com/RecoHut-Datasets/avazu/raw/v1/train.csv"
    valid_url = "https://github.com/RecoHut-Datasets/avazu/raw/v1/valid.csv"
    test_url = "https://github.com/RecoHut-Datasets/avazu/raw/v1/test.csv"

    @property
    def raw_file_names(self):
        return ['train.csv',
                'valid.csv',
                'test.csv']

    def download(self):
        download_url(self.train_url, self.raw_dir)
        download_url(self.valid_url, self.raw_dir)
        download_url(self.test_url, self.raw_dir)

    def convert_weekday(self, df, col_name):
        def _convert_weekday(timestamp):
            dt = date(int('20' + timestamp[0:2]), int(timestamp[2:4]), int(timestamp[4:6]))
            return int(dt.strftime('%w'))
        return df['hour'].apply(_convert_weekday)

    def convert_weekend(self, df, col_name):
        def _convert_weekend(timestamp):
            dt = date(int('20' + timestamp[0:2]), int(timestamp[2:4]), int(timestamp[4:6]))
            return 1 if dt.strftime('%w') in ['6', '0'] else 0
        return df['hour'].apply(_convert_weekend)

    def convert_hour(self, df, col_name):
        return df['hour'].apply(lambda x: int(x[6:8]))

# Cell
class AvazuDataModule(CTRDataModule):
    dataset_cls = AvazuDataset