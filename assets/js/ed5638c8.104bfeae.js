"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8060],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,h=m["".concat(c,".").concat(d)]||m[d]||p[d]||i;return n?r.createElement(h,s(s({ref:t},u),{},{components:n})):r.createElement(h,s({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},60618:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),s=["components"],a={},c="STAMP",l={unversionedId:"models/stamp",id:"models/stamp",title:"STAMP",description:"/img/content-models-raw-mp2-stamp-untitled.png",source:"@site/docs/models/stamp.md",sourceDirName:"models",slug:"/models/stamp",permalink:"/docs/models/stamp",editUrl:"https://github.com/recohut/docs/docs/docs/models/stamp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SR",permalink:"/docs/models/sr"},next:{title:"SVAE",permalink:"/docs/models/svae"}},u=[],p={toc:u};function m(e){var t=e.components,a=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stamp"},"STAMP"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"/img/content-models-raw-mp2-stamp-untitled.png",src:n(18246).Z})),(0,i.kt)("p",null,"STAMP is one of the approaches that replaces complex recurrent computations in RNNs with self-attention layers (Liu, Zeng, Mokhosi, and Zhang, 2018). The model presents a novel attention mechanism in which the attention scores are computed from the user\u2019s current session context and enhanced by the sessions\u2019 history. Thus, the model can capture the user interest drifts, especially during long sessions and outperform other approaches like GRU4Rec (Hidasi, Karatzoglou, Baltrunas, and Tikk, 2015) that uses long term memory but still not efficient in capturing user drifts. Figure 4 shows the model architecture where the input is two embedding vectors (EL, ESt ). The former denotes the embedding of the last item xL clicked by the user in the current session, which represents the short term memory of the user\u2019s interest. The later represents his overall interest through the full session clicked items. ESt vector is computed by averaging the items embedding vectors throughout the whole session memory (x1, x2, ..., xL). An attention layer is used to produce a real-valued vector Ea, where this layer is responsible for computing the attention weights corresponding to each item in the current session. In this way, we avoid treating each item in the session equally important and paying more attention to only related items, which improves the capturing of the drifts in the user interest. Both Ea and EL flow into two multi-layer perceptron networks identical in shape but have separate independent parameters for feature abstraction. Finally, a trilinear composition function, followed by a softmax function, is used for the likelihood calculation of the available items to be clicked next by the user and to be used in the recommendation process."))}m.isMDXComponent=!0},18246:function(e,t,n){t.Z=n.p+"assets/images/content-models-raw-mp2-stamp-untitled-80d3c5c139c31f182320969f6cacbb29.png"}}]);