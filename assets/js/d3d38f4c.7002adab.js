"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1746],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||s;return n?a.createElement(h,i(i({ref:t},l),{},{components:n})):a.createElement(h,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<s;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},96814:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return l},default:function(){return u}});var a=n(87462),r=n(63366),s=(n(67294),n(3905)),i=["components"],o={},c="Huawei AppGallery",d={unversionedId:"concept-extras/case-studies/huawei-appgallery",id:"concept-extras/case-studies/huawei-appgallery",title:"Huawei AppGallery",description:"Untitled",source:"@site/docs/concept-extras/case-studies/huawei-appgallery.md",sourceDirName:"concept-extras/case-studies",slug:"/concept-extras/case-studies/huawei-appgallery",permalink:"/docs/concept-extras/case-studies/huawei-appgallery",editUrl:"https://github.com/recohut/docs/docs/docs/concept-extras/case-studies/huawei-appgallery.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Etsy Personalization",permalink:"/docs/concept-extras/case-studies/etsy-personalization"},next:{title:"LinkedIn GLMix",permalink:"/docs/concept-extras/case-studies/linkedin-glmix"}},l=[],p={toc:l};function u(e){var t=e.components,o=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"huawei-appgallery"},"Huawei AppGallery"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Untitled",src:n(63954).Z})),(0,s.kt)("p",null,"Recommender system consists of three modules: candidate selection, matching, and ranking. In the App Store, there exist tens or hundreds of thousands of apps. If all the apps are involved for recommendation, the latency is unacceptable in practice, because it takes time to predict the matching score between a user and all the apps. Therefore, the candidate selection module is needed to select several hundred apps from the universal set for each user. Then the matching module predicts the matching score between a user and the selected apps representing the user\u2019s preference on them. Lastly, the ranking module produces the ranking list based on the matching scores and other principles (diversity and business rules)."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Pipeline of the APP recommendation system.",src:n(28077).Z})),(0,s.kt)("p",null,"Pipeline of the APP recommendation system."),(0,s.kt)("p",null,"We sample and collect 22 consecutive days of user-app download records from the game recommendation scenario. A user-item bipartite graph is constructed based on the download records. Two types of nodes (user nodes and item nodes) exist and an edge between a user node and an item node is included if there is an associated download record. App features (e.g., identification and category) and user features (e.g., click/browse/search history) are used as node features in the graph. As can be observed from the figure above, a GCN model (i.e., a simplified version of MGCCF) has been deployed in the candidate selection module. MGCCF learns an embedding for each user as well as each item. Then, candidates for each user are generated by finding the most similar items by computing the similarity between user and item embedding. The model employed in the candidate selection module of our recommender system is trained on 14 days\u2019 data, which is referred to as \u201cbatch mode\u201d. Based on the collected 22 days\u2019 data, we test the performance of \u201cbatch mode\u201d in a sliding window manner. Specifically, days ","[T,T +13]"," of data are used for training, day T +14 of data is used for validation, and day T + 15 of data is for testing, where T \u2208 ","[1, 6]",". On the other hand, the model trained by different incremental learning strategies starts with a warm-start model (which is trained on days ","[0, 13]"," of data), instead of from scratch. The model is then incrementally updated with training data day T, validated on data T +1, and tested on data T +2, where T \u2208 ","[14, 19]","."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Performance Comparison (Log loss) in Industrial Dataset. \u22c6 denotes p &lt; 0.05 when performing the two-tailed pairwise t-test on GraphSAIL with the best baseline.",src:n(81748).Z})),(0,s.kt)("p",null,"Performance Comparison (Log loss) in Industrial Dataset. \u22c6 denotes p < 0.05 when performing the two-tailed pairwise t-test on GraphSAIL with the best baseline."),(0,s.kt)("p",null,"The effectiveness of a model is measured by Logloss, while the efficiency is measured by the model\u2019s training time in seconds. As can be observed, our model achieves consistently better results compared to baseline models on all incremental days. Specifically, GraphSAIL outperforms batch mode by 5.84% in terms of Log loss. For efficiency concern, it takes just 3.5% of the training time of batch mode approach. Moreover, GraphSAIL outperforms the other incremental learning baselines which is consistent with the observations in public datasets. It demonstrates the advantage of our model for incrementally training a GCN model on a large-scale industrial scenario with rich side information."))}u.isMDXComponent=!0},28077:function(e,t,n){t.Z=n.p+"assets/images/content-concepts-case-studies-raw-case-studies-huawei-appgallery-untitled-1-c5aa633ea21ea7279b6a2fd951bd65a8.png"},81748:function(e,t,n){t.Z=n.p+"assets/images/content-concepts-case-studies-raw-case-studies-huawei-appgallery-untitled-2-a621ce408dbabcf5e9ce8c1809190560.png"},63954:function(e,t,n){t.Z=n.p+"assets/images/content-concepts-case-studies-raw-case-studies-huawei-appgallery-untitled-4025644c500062589376982ec2bb3404.png"}}]);