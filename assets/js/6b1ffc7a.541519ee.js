"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1284],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return p}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),l=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(a),p=n,f=m["".concat(c,".").concat(p)]||m[p]||d[p]||i;return a?r.createElement(f,o(o({ref:t},u),{},{components:a})):r.createElement(f,o({ref:t},u))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},40616:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),o=["components"],s={},c="AUSH",l={unversionedId:"models/aush",id:"models/aush",title:"AUSH",description:"Attacking Recommender Systems with Augmented User Profiles",source:"@site/docs/models/aush.mdx",sourceDirName:"models",slug:"/models/aush",permalink:"/docs/models/aush",editUrl:"https://github.com/recohut/docs/docs/docs/models/aush.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AttRec",permalink:"/docs/models/attrec"},next:{title:"AutoInt",permalink:"/docs/models/autoint"}},u=[{value:"Performance Comparison",id:"performance-comparison",children:[],level:3}],d={toc:u};function m(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"aush"},"AUSH"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Attacking Recommender Systems with Augmented User Profiles")),(0,i.kt)("p",null,"AUSH is capable of tailoring attacks against RS according to budget and complex attack goals, such as targeting a specific user group. Specifically, the generator acts like an \u201cattacker\u201d and generates fake user profiles by augmenting the \u201ctemplate\u201d of existing real user profiles. Moreover, the generator is able to achieve secondary attack goals by incorporating a shilling loss. On the other hand, the discriminator module performs like a \u201cdefender\u201d. It distinguishes fake user profiles from real user profiles and provides guidance to train the generator to generate undetectable fake user profiles. Each of the generator and the discriminator strikes to enhance itself to beat the other one at every round of the minimax competition."),(0,i.kt)("p",null,"We divide the items in a fake user profile into one target item (i.e., the attacker wants to assign it a malicious rating), a number of filler items (i.e., a group of randomly sampled items which have been rated by the real user and will be used to obstruct detection of the attack), a number of selected items (i.e., a group of human-selected items for special treatment to form the characteristics of the attack), and unrated items (i.e., the rest of the items in the RS). Selected items are the same across all fake user profiles, while each fake user profile has its own filler items."),(0,i.kt)("p",null,"Attacking RS is costly. As such, in designing a practical attack model against RS, we have to take into account the following attack budget and goal:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Attack budget: we consider two factors",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Attack size is the number of fake user profiles"),(0,i.kt)("li",{parentName:"ul"},"Profile size is the number of non-zero ratings. The larger the attack size / profile size is, the more effective and expensive the attack could be."))),(0,i.kt)("li",{parentName:"ul"},"Attack goal: the goal an adversarial party wants to achieve could be complex and we mainly consider the following aspects",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Attack type indicates whether it is a push attack (i.e., assign a maximal rating on target item to promote it) or a nuke attack (i.e., assign a minimal rating on target item to demote it). Since the two types are similar and can be exchanged (i.e., change a maximal rating to a minimal rating), we consider push attacks in the sequel for simplicity."),(0,i.kt)("li",{parentName:"ul"},"Target user group is the group of users that an attack aims at."),(0,i.kt)("li",{parentName:"ul"},"Ancillary effects (e.g., demoting competitors, bias the ratings of a special user groups on selected items) are also desired in the attack. Such intentions will manifest in choosing selected items.")))),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("center",null,(0,i.kt)("img",{src:"https://github.com/recohut/recsys-attacks/raw/d7472b7296515249c1bd1bbb8ea0afa9b07f6d9d/docs/_images/C900563_1.png"}),(0,i.kt)("figcaption",null,"Pipeline of AUSH. We use binary ratings for illustration, though AUSH can handle a five-point scale. Red and blue indicate a high rating and a low rating, respectively.")))),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("center",null,(0,i.kt)("img",{src:"https://github.com/recohut/recsys-attacks/raw/d7472b7296515249c1bd1bbb8ea0afa9b07f6d9d/docs/_images/C900563_2.png"}),(0,i.kt)("figcaption",null,"AUSH algorithm.")))),(0,i.kt)("h3",{id:"performance-comparison"},"Performance Comparison"),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("center",null,(0,i.kt)("img",{src:"https://github.com/recohut/recsys-attacks/raw/d7472b7296515249c1bd1bbb8ea0afa9b07f6d9d/docs/_images/C900563_3.png"}),(0,i.kt)("figcaption",null,"Attack performance against NMF. Best results are marked in bold, and AUSH results are also marked in bold if they are the second best in each category.")))),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("center",null,(0,i.kt)("img",{src:"https://github.com/recohut/recsys-attacks/raw/d7472b7296515249c1bd1bbb8ea0afa9b07f6d9d/docs/_images/C900563_4.png"}),(0,i.kt)("figcaption",null,"Attack performance against NNMF. Best results are marked in bold, and AUSH results are also marked in bold if they are the second best in each category.")))),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("center",null,(0,i.kt)("img",{src:"https://github.com/recohut/recsys-attacks/raw/d7472b7296515249c1bd1bbb8ea0afa9b07f6d9d/docs/_images/C900563_5.png"}),(0,i.kt)("figcaption",null,"Attack performance against U-Autoencoder. Best results are marked in bold, and AUSH results are also marked in bold if they are the second best in each category")))),(0,i.kt)("figure",null,(0,i.kt)("p",null,(0,i.kt)("center",null,(0,i.kt)("img",{src:"https://github.com/recohut/recsys-attacks/raw/d7472b7296515249c1bd1bbb8ea0afa9b07f6d9d/docs/_images/C900563_6.png"}),(0,i.kt)("figcaption",null,"Attack performance against I-Autoencoder. Best results are marked in bold, and AUSH results are also marked in bold if they are the second best in each category.")))))}m.isMDXComponent=!0}}]);