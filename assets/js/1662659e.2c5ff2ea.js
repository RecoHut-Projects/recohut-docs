"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9956],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),f=i,h=u["".concat(l,".").concat(f)]||u[f]||d[f]||r;return n?o.createElement(h,a(a({ref:t},p),{},{components:n})):o.createElement(h,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<r;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},92694:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var o=n(87462),i=n(63366),r=(n(67294),n(3905)),a=["components"],c={},l="Object Detection",s={unversionedId:"concept-extras/vision/object-detection",id:"concept-extras/vision/object-detection",title:"Object Detection",description:"/img/content-concepts-raw-computer-vision-object-detection-slide29.png",source:"@site/docs/concept-extras/vision/object-detection.mdx",sourceDirName:"concept-extras/vision",slug:"/concept-extras/vision/object-detection",permalink:"/docs/concept-extras/vision/object-detection",editUrl:"https://github.com/recohut/docs/docs/docs/concept-extras/vision/object-detection.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Image Similarity",permalink:"/docs/concept-extras/vision/image-similarity"},next:{title:"Object Tracking",permalink:"/docs/concept-extras/vision/object-tracking"}},p=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Models",id:"models",children:[{value:"Faster R-CNN",id:"faster-r-cnn",children:[],level:3},{value:"SSD (Single Shot Detector)",id:"ssd-single-shot-detector",children:[],level:3},{value:"YOLO (You Only Look Once)",id:"yolo-you-only-look-once",children:[],level:3},{value:"EfficientDet",id:"efficientdet",children:[],level:3}],level:2},{value:"Process flow",id:"process-flow",children:[],level:2},{value:"Use Cases",id:"use-cases",children:[{value:"Automatic License Plate Recognition",id:"automatic-license-plate-recognition",children:[],level:3},{value:"Object Detection App",id:"object-detection-app",children:[],level:3},{value:"Logo Detector",id:"logo-detector",children:[],level:3},{value:"TF Object Detection API Experiments",id:"tf-object-detection-api-experiments",children:[],level:3},{value:"Pre-trained Inference Experiments",id:"pre-trained-inference-experiments",children:[],level:3},{value:"Object Detection App",id:"object-detection-app-1",children:[],level:3},{value:"Real-time Object Detector in OpenCV",id:"real-time-object-detector-in-opencv",children:[],level:3},{value:"EfficientDet Fine-tuning",id:"efficientdet-fine-tuning",children:[],level:3},{value:"YOLO4 Fine-tuning",id:"yolo4-fine-tuning",children:[],level:3},{value:"Detectron2 Fine-tuning",id:"detectron2-fine-tuning",children:[],level:3}],level:2}],d={toc:p};function u(e){var t=e.components,c=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"object-detection"},"Object Detection"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"/img/content-concepts-raw-computer-vision-object-detection-slide29.png",src:n(40055).Z})),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Definition:")," Object detection is a computer vision technique that allows us to identify and locate objects in an image or video."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Applications:")," Crowd counting, Self-driving cars, Video surveillance, Face detection, Anomaly detection"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Scope:")," Detect objects in images and videos, 2-dimensional bounding boxes, Real-time"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Tools:")," Detectron2, TF Object Detection API, OpenCV, TFHub, TorchVision")),(0,r.kt)("h2",{id:"models"},"Models"),(0,r.kt)("h3",{id:"faster-r-cnn"},"Faster R-CNN"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://arxiv.org/abs/1506.01497"},"Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks. arXiv, 2016."))),(0,r.kt)("h3",{id:"ssd-single-shot-detector"},"SSD (Single Shot Detector)"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://arxiv.org/abs/1512.02325"},"SSD: Single Shot MultiBox Detector. CVPR, 2016."))),(0,r.kt)("h3",{id:"yolo-you-only-look-once"},"YOLO (You Only Look Once)"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/1804.02767"},(0,r.kt)("em",{parentName:"a"},"YOLOv3: An Incremental Improvement. arXiv, 2018."))),(0,r.kt)("h3",{id:"efficientdet"},"EfficientDet"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://arxiv.org/abs/1911.09070"},"EfficientDet: Scalable and Efficient Object Detection. CVPR, 2020."))),(0,r.kt)("p",null,"It achieved 55.1 AP on COCO test-dev with 77M parameters."),(0,r.kt)("h2",{id:"process-flow"},"Process flow"),(0,r.kt)("p",null,"Step 1: Collect Images"),(0,r.kt)("p",null,"Capture via camera, scrap from the internet or use public datasets"),(0,r.kt)("p",null,"Step 2: Create Labels"),(0,r.kt)("p",null,"This step is required only if the object category is not available in any pre-trained model or labels are not freely available on the web. To create the labels (bounding boxes) using either open-source tools like Labelme or any other professional tool."),(0,r.kt)("p",null,"Step 3: Data Acquisition"),(0,r.kt)("p",null,"Setup the database connection and fetch the data into python environment"),(0,r.kt)("p",null,"Step 4: Data Exploration"),(0,r.kt)("p",null,"Explore the data, validate it and create preprocessing strategy"),(0,r.kt)("p",null,"Step 5: Data Preparation"),(0,r.kt)("p",null,"Clean the data and make it ready for modeling"),(0,r.kt)("p",null,"Step 6: Model Building"),(0,r.kt)("p",null,"Create the model architecture in python and perform a sanity check"),(0,r.kt)("p",null,"Step 7: Model Training"),(0,r.kt)("p",null,"Start the training process and track the progress and experiments"),(0,r.kt)("p",null,"Step 8: Model Validation"),(0,r.kt)("p",null,"Validate the final set of models and select/assemble the final model"),(0,r.kt)("p",null,"Step 9: UAT Testing"),(0,r.kt)("p",null,"Wrap the model inference engine in API for client testing"),(0,r.kt)("p",null,"Step 10: Deployment"),(0,r.kt)("p",null,"Deploy the model on cloud or edge as per the requirement"),(0,r.kt)("p",null,"Step 11: Documentation"),(0,r.kt)("p",null,"Prepare the documentation and transfer all assets to the client  "),(0,r.kt)("h2",{id:"use-cases"},"Use Cases"),(0,r.kt)("h3",{id:"automatic-license-plate-recognition"},"Automatic License Plate Recognition"),(0,r.kt)("p",null,"Recognition of vehicle license plate number using various methods including YOLO4 object detector and Tesseract OCR. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/Automatic-License-Plate-Recognition-10ec22181b454b1facc99abdeadbf78f"},"here"),"."),(0,r.kt)("h3",{id:"object-detection-app"},"Object Detection App"),(0,r.kt)("p",null,"This is available as a streamlit app. It detects common objects. 3 models are available for this task - Caffe MobileNet-SSD, Darknet YOLO3-tiny, and Darknet YOLO3. Along with common objects, this app also detects human faces and fire. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/Object-Detector-App-c60fddae2fcd426ab763261436fb15d8"},"here"),". "),(0,r.kt)("h3",{id:"logo-detector"},"Logo Detector"),(0,r.kt)("p",null,"Build a REST API to detect logos in images. API will receive 2 zip files - 1) a set of images in which we have to find the logo and 2) an image of the logo. Deployed the model in AWS Elastic Beanstalk. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/Logo-Detection-91bfe4953dcf4558807b342efe05a9ff"},"here"),"."),(0,r.kt)("h3",{id:"tf-object-detection-api-experiments"},"TF Object Detection API Experiments"),(0,r.kt)("p",null,"The TensorFlow Object Detection API is an open-source framework built on top of TensorFlow that makes it easy to construct, train, and deploy object detection models. We did inference on pre-trained models, few-shot training on single class, few-shot training on multiple classes and conversion to TFLite model. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/Tensorflow-Object-Detection-API-499b017e502d4950a9d448fb35a41d58"},"here"),"."),(0,r.kt)("h3",{id:"pre-trained-inference-experiments"},"Pre-trained Inference Experiments"),(0,r.kt)("p",null,"Inference on 6 pre-trained models - Inception-ResNet (TFHub), SSD-MobileNet (TFHub), PyTorch YOLO3, PyTorch SSD, PyTorch Mask R-CNN, and EfficientDet. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/Object-Detection-Inference-Experiments-568fa092b1d34471b676fd43a42974b2"},"here")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/Object-Detection-Inference-with-Pre-trained-models-da9e2e5bfab944bc90f568f6bc4b3e1f"},"here"),"."),(0,r.kt)("h3",{id:"object-detection-app-1"},"Object Detection App"),(0,r.kt)("p",null,"TorchVision Mask R-CNN model Gradio App. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/MaskRCNN-TorchVision-Object-Detection-Gradio-App-c22f2a13ab63493b9b38720b20c50051"},"here"),"."),(0,r.kt)("h3",{id:"real-time-object-detector-in-opencv"},"Real-time Object Detector in OpenCV"),(0,r.kt)("p",null,"Build a model to detect common objects like scissors, cups, bottles, etc. using the MobileNet SSD model in the OpenCV toolkit. It will task input from the camera and detect objects in real-time. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/Object-Detection-with-OpenCV-MobileNet-SSD-38ff496d2f0d427185a9c51cebc1ddf2"},"here"),". Available as a Streamlit app also (this app is not real-time)."),(0,r.kt)("h3",{id:"efficientdet-fine-tuning"},"EfficientDet Fine-tuning"),(0,r.kt)("p",null,"Fine-tune YOLO4 model on new classes. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/EfficientDet-fine-tuning-01a6ffd1e11f4dc1941073aff4b9b486"},"here"),"."),(0,r.kt)("h3",{id:"yolo4-fine-tuning"},"YOLO4 Fine-tuning"),(0,r.kt)("p",null,"Fine-tune YOLO4 model on new classes. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/YOLO-4-b32c2d2a4b8644b59f1c05e6887ffcca"},"here"),"."),(0,r.kt)("h3",{id:"detectron2-fine-tuning"},"Detectron2 Fine-tuning"),(0,r.kt)("p",null,"Fine-tune Detectron2 Mask R-CNN (with PointRend) model on new classes. Checkout the notion ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/YOLO-4-b32c2d2a4b8644b59f1c05e6887ffcca"},"here"),"."))}u.isMDXComponent=!0},40055:function(e,t,n){t.Z=n.p+"assets/images/content-concepts-raw-computer-vision-object-detection-slide29-981cc9dc9dbccf90a7a22f93eeb43f22.png"}}]);